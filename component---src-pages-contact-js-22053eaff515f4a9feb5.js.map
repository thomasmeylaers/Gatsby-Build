{"version":3,"file":"component---src-pages-contact-js-22053eaff515f4a9feb5.js","mappings":"wRAYe,SAASA,IACtBC,EAAAA,GAAAA,eAAoBC,EAAAA,GAGpB,MAAMC,GAAeC,EAAAA,EAAAA,UACfC,GAAeD,EAAAA,EAAAA,WAGf,EAACE,EAAc,EAACC,IAAoBC,EAAAA,EAAAA,WAAS,IAC7C,EAACC,EAAQ,EAACC,IAAcF,EAAAA,EAAAA,WAAS,IACjC,EAACG,EAAQ,EAACC,IAAcJ,EAAAA,EAAAA,WAAS,GAqEvC,OAnEAK,EAAAA,EAAAA,YAAU,KACO,cAAXC,SACEA,OAAOC,WAAa,MACtBH,GAAW,GAGbP,EAAaW,QAAU,IAAIC,EAAAA,GAAiB,CAC1CC,GAAIf,EAAaa,QACjBG,QAAQ,EAERC,WAAY,KAEdf,EAAaW,QAAQK,GAAG,SAAUnB,EAAAA,EAAAA,QAElCA,EAAAA,EAAAA,cAA4B,0BAA2B,CACrDoB,UAAUC,GACR,OAAOC,UAAUC,OAASpB,EAAaW,QAAQU,SAASH,EAAO,EAAG,GAAKlB,EAAaW,QAAQW,OAAOC,SAASD,OAAOE,CACrH,EACAC,wBACE,MAAO,CAAEC,IAAK,EAAGC,KAAM,EAAGC,MAAOnB,OAAOC,WAAYmB,OAAQpB,OAAOqB,YACrE,EAEAC,QAASjC,EAAaa,QAAQqB,MAAMC,UAAY,YAAc,UAIhErC,EAAAA,GAAAA,MAAAA,QAAmB,kBAAkBsC,SAAQC,IAC3CvC,EAAAA,GAAAA,GAAQuC,EAAS,CACfC,SAAU,yCACVH,UAAW,cACXI,SAAU,EACVC,cAAe,CACbC,SAAU,0BACVC,QAASL,IAEX,IAGJtC,EAAAA,EAAAA,WAGFK,GAAiB,GACjBG,GAAW,EAAM,GAChB,KAEHG,EAAAA,EAAAA,YAAU,KACR,IAAKJ,EAAS,CACDR,EAAAA,GAAAA,SAAc,CAAE6C,SAAU,CAAEC,KAAM,gBAC1CC,GAAG,eAAgB,CACpBP,SAAU,yCACVH,UAAW,cACXW,QAAS,GACTP,SAAU,IACVQ,MAAO,KACNF,GAAG,UAAW,CACfG,QAAS,EACTT,SAAU,EACVQ,OAAQ,IACPF,GAAG,aAAc,CAClBG,QAAS,EACTD,OAAQ,EACRR,SAAU,GAGd,IACC,CAACjC,IAGF2C,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACC,EAAAA,EAAM,CAAC5C,QAASA,IACfE,EAA0B,GAAhByC,EAAAA,cAACE,EAAAA,EAAS,MACtBF,EAAAA,cAACG,EAAAA,EAAS,CAACC,SAAU,YACrBJ,EAAAA,cAAA,QAAMK,UAAU,qBAAqB,2BAAsBC,IAAKvD,GAC9DiD,EAAAA,cAACO,EAAAA,EAAG,CAACtD,aAAcA,EAAcmD,SAAS,YAC1CJ,EAAAA,cAACQ,EAAAA,EAAc,CAACvD,aAAcA,EAAcmD,SAAU,aAI9D,C","sources":["webpack://gatsby-starter-default/./src/pages/contact.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react'\r\nimport LocomotiveScroll from 'locomotive-scroll';\r\nimport { gsap } from 'gsap'\r\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\r\n\r\nimport Nav from \"../components/Nav/Nav\"\r\nimport Loader from '../components/Loader/Loader';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ContactSection from '../components/Home/Sections/ContactSection/ContactSection';\r\nimport Hamburger from '../components/Hamburger/Hamburger';\r\nimport MobileNav from '../components/MobileNav/MobileNav';\r\n\r\nexport default function Contact() {\r\n  gsap.registerPlugin(ScrollTrigger)\r\n\r\n  // Refs\r\n  const containerRef = useRef()\r\n  const scrollObject = useRef()\r\n\r\n  // State\r\n  const [windowDefined, setWindowDefined] = useState(false)\r\n  const [loading, setLoading] = useState(true)\r\n  const [desktop, setDesktop] = useState(true)\r\n\r\n  useEffect(() => {\r\n    if (window !== \"undefined\") {\r\n      if (window.innerWidth < 1200) {\r\n        setDesktop(false)\r\n      }\r\n      // Locomotive scroll init\r\n      scrollObject.current = new LocomotiveScroll({\r\n        el: containerRef.current,\r\n        smooth: true,\r\n        // lerp: .05,\r\n        multiplier: .8\r\n      });\r\n      scrollObject.current.on(\"scroll\", ScrollTrigger.update)\r\n      // ScrollTrigger\r\n      ScrollTrigger.scrollerProxy(\"[data-scroll-container]\", {\r\n        scrollTop(value) {\r\n          return arguments.length ? scrollObject.current.scrollTo(value, 0, 0) : scrollObject.current.scroll.instance.scroll.y;\r\n        }, // we don't have to define a scrollLeft because we're only scrolling vertically.\r\n        getBoundingClientRect() {\r\n          return { top: 0, left: 0, width: window.innerWidth, height: window.innerHeight };\r\n        },\r\n        // LocomotiveScroll handles things completely differently on mobile devices - it doesn't even transform the container at all! So to get the correct behavior and avoid jitters, we should pin things with position: fixed on mobile. We sense it by checking to see if there's a transform applied to the container (the LocomotiveScroll-controlled element).\r\n        pinType: containerRef.current.style.transform ? \"transform\" : \"fixed\"\r\n      });\r\n\r\n\r\n      gsap.utils.toArray(\".scroll_reveal\").forEach(element => {\r\n        gsap.to(element, {\r\n          clipPath: 'polygon(0 0,100% 0, 100% 100%, 0 100%)',\r\n          transform: \"skewY(0deg)\",\r\n          duration: 1,\r\n          scrollTrigger: {\r\n            scroller: \"[data-scroll-container]\",\r\n            trigger: element,\r\n          }\r\n        })\r\n      })\r\n\r\n      ScrollTrigger.refresh();\r\n\r\n    }\r\n    setWindowDefined(true)\r\n    setLoading(false)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      const tl = gsap.timeline({ defaults: { ease: 'power4.out' } })\r\n      tl.to('.text-reveal', {\r\n        clipPath: 'polygon(0 0,100% 0, 100% 100%, 0 100%)',\r\n        transform: \"skewY(0deg)\",\r\n        stagger: .3,\r\n        duration: 1.5,\r\n        delay: 0.5\r\n      }).to('.reveal', {\r\n        opacity: 1,\r\n        duration: 1,\r\n        delay: -2\r\n      }).to('.hamburger', {\r\n        opacity: 1,\r\n        delay: -3,\r\n        duration: 2\r\n      })\r\n\r\n    }\r\n  }, [loading])\r\n\r\n  return (\r\n    <>\r\n      <Loader loading={loading} />\r\n      {!desktop ? <Hamburger /> : \"\"}\r\n      <MobileNav selected={'contact'} />\r\n      <main className=\".main contact-page\" data-scroll-container ref={containerRef}>\r\n        <Nav scrollObject={scrollObject} selected=\"contact\" />\r\n        <ContactSection scrollObject={scrollObject} selected={'contact'} />\r\n      </main>\r\n    </>\r\n  )\r\n}\r\n"],"names":["Contact","gsap","ScrollTrigger","containerRef","useRef","scrollObject","windowDefined","setWindowDefined","useState","loading","setLoading","desktop","setDesktop","useEffect","window","innerWidth","current","LocomotiveScroll","el","smooth","multiplier","on","scrollTop","value","arguments","length","scrollTo","scroll","instance","y","getBoundingClientRect","top","left","width","height","innerHeight","pinType","style","transform","forEach","element","clipPath","duration","scrollTrigger","scroller","trigger","defaults","ease","to","stagger","delay","opacity","React","Loader","Hamburger","MobileNav","selected","className","ref","Nav","ContactSection"],"sourceRoot":""}